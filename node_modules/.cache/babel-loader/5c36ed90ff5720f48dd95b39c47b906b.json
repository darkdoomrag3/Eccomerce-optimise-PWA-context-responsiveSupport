{"ast":null,"code":"var _jsxFileName = \"D:\\\\React full stack + redux + context api\\\\Website\\\\ecowebsite\\\\src\\\\Components\\\\CartDropDown\\\\CartDropDown.js\";\nimport React from 'react';\nimport './cartdropdown.scss';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { connect } from 'react-redux';\nimport CartItem from '../CartItem/CartItem';\nimport { withRouter } from 'react-router-dom';\nimport { toggleHidden } from '../../redux/cart/cart.action';\n\nconst CartDropDown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, cartItems.lenght ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }\n})) : /*#__PURE__*/React.createElement(\"span\", {\n  className: \"empty-message\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }\n}, \" Your cart is empty \")), /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleHidden());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}, \"Go To Check Out\"));\n\nconst mapStateToProps = ({\n  cart: {\n    cartItems\n  }\n}) => ({\n  cartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropDown));","map":{"version":3,"sources":["D:/React full stack + redux + context api/Website/ecowebsite/src/Components/CartDropDown/CartDropDown.js"],"names":["React","CustomButton","connect","CartItem","withRouter","toggleHidden","CartDropDown","cartItems","history","dispatch","lenght","map","cartItem","id","push","mapStateToProps","cart"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,8BAA7B;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBAEjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEKF,SAAS,CAACG,MAAV,GACGH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBAClB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADH,gBAGS;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALd,CADJ,eAWI,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAM;AACzBJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACH,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXJ,CAFJ;;AAyBA,MAAMU,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAET,IAAAA;AAAF;AAAR,CAAD,MAA8B;AAClDA,EAAAA;AADkD,CAA9B,CAAxB;;AAKA,eAAeH,UAAU,CAACF,OAAO,CAACa,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport './cartdropdown.scss';\r\nimport CustomButton from '../CustomButton/CustomButton';\r\nimport { connect } from 'react-redux'\r\nimport CartItem from '../CartItem/CartItem';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { toggleHidden } from '../../redux/cart/cart.action';\r\n\r\n\r\nconst CartDropDown = ({ cartItems, history, dispatch }) => (\r\n\r\n    <div className='cart-dropdown' >\r\n        <div className='cart-items'>\r\n\r\n            {cartItems.lenght ? (\r\n                cartItems.map(cartItem =>\r\n                    <CartItem key={cartItem.id} item={cartItem} />\r\n                )) : (<span className='empty-message' > Your cart is empty </span>\r\n                )\r\n            }\r\n        </div>\r\n\r\n        <CustomButton onClick={() => {\r\n            history.push('/checkout');\r\n            dispatch(toggleHidden())\r\n        }} >Go To Check Out</CustomButton>\r\n\r\n\r\n\r\n    </div >\r\n\r\n\r\n)\r\n\r\nconst mapStateToProps = ({ cart: { cartItems } }) => ({\r\n    cartItems\r\n})\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropDown));"]},"metadata":{},"sourceType":"module"}