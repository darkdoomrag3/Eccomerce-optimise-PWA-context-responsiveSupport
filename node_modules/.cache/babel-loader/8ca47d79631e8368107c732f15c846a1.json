{"ast":null,"code":"var _jsxFileName = \"D:\\\\React full stack + redux + context api\\\\Website\\\\ecowebsite\\\\src\\\\Components\\\\Test\\\\Test.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Test = () => {\n  const [user, setUser] = useState(null);\n  const [searchQuery, setSearchQuery] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/users?username=${searchQuery}`);\n      const resJson = await response.json();\n      setUser(resJson[2]);\n    };\n\n    fetchData();\n  }, [searchQuery]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    value: searchQuery,\n    onChange: event => setSearchQuery(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), user ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, user.name), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, user.username), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, user.email)) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"user can not find\"));\n};\n\nexport default Test;","map":{"version":3,"sources":["D:/React full stack + redux + context api/Website/ecowebsite/src/Components/Test/Test.js"],"names":["React","useState","useEffect","Test","user","setUser","searchQuery","setSearchQuery","fetchData","response","fetch","resJson","json","event","target","value","name","username","email"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAGZ,UAAMM,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uDAAsDJ,WAAY,EAApE,CAA5B;AACA,YAAMK,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAP,MAAAA,OAAO,CAACM,OAAO,CAAC,CAAD,CAAR,CAAP;AAEH,KALD;;AAOAH,IAAAA,SAAS;AAEZ,GAZQ,EAYN,CAACF,WAAD,CAZM,CAAT;AAcA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAEA,WAFX;AAGI,IAAA,QAAQ,EAAEO,KAAK,IAAIN,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUQX,IAAI,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACY,IAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,IAAI,CAACa,QAAV,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,IAAI,CAACc,KAAV,CAJJ,CADA,gBASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAnBZ,CADJ;AA4BH,CA/CD;;AAiDA,eAAef,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst Test = () => {\r\n\r\n    const [user, setUser] = useState(null)\r\n    const [searchQuery, setSearchQuery] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        const fetchData = async () => {\r\n            const response = await fetch(`https://jsonplaceholder.typicode.com/users?username=${searchQuery}`)\r\n            const resJson = await response.json()\r\n            setUser(resJson[2])\r\n\r\n        }\r\n\r\n        fetchData();\r\n\r\n    }, [searchQuery])\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type='search'\r\n                value={searchQuery}\r\n                onChange={event => setSearchQuery(event.target.value)}\r\n\r\n            />\r\n\r\n\r\n            {\r\n                user ? (\r\n                    <div>\r\n\r\n                        <h2>{user.name}</h2>\r\n                        <h2>{user.username}</h2>\r\n                        <h2>{user.email}</h2>\r\n                    </div>\r\n\r\n\r\n                ) : <span>user can not find</span>\r\n\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test\r\n"]},"metadata":{},"sourceType":"module"}