{"ast":null,"code":"var _jsxFileName = \"D:\\\\React full stack + redux + context api\\\\Website\\\\ecowebsite\\\\src\\\\provider\\\\cart\\\\cartProvider.jsx\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { addItemToCart, removeItemFromCart, filterItemFromCart, getCartItemsCount, getCartItemTotal } from \"./cart.utils\";\nexport const CartContext = createContext({\n  hidden: true,\n  toggleHidden: () => {},\n  cartItems: [],\n  removeItems: () => {},\n  addItem: () => {},\n  clearItemFromCart: () => {},\n  cartItemsCount: 0,\n  cartTotal: 0\n});\n\nconst CartProvider = ({\n  children\n}) => {\n  const [hidden, setHidden] = useState(true);\n\n  const toggleHidden = () => setHidden(!hidden);\n\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotal, setCartTotal] = useState(0);\n  const [cartItemsCount, setCartItemsCount] = useState(0);\n\n  const addItem = item => setCartItems(addItemToCart(cartItems, item));\n\n  const removeItem = item => setCartItems(removeItemFromCart(cartItems, item));\n\n  const clearItemFromCart = item => setCartItems(filterItemFromCart(cartItems, item));\n\n  useEffect(() => {\n    setCartItemsCount(getCartItemsCount(cartItems));\n    setCartTotal(getCartItemTotal(cartItems));\n  }, [cartItems]);\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: {\n      hidden,\n      toggleHidden,\n      addItem,\n      cartItemsCount,\n      cartItems,\n      removeItem,\n      clearItemFromCart\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default CartProvider;","map":{"version":3,"sources":["D:/React full stack + redux + context api/Website/ecowebsite/src/provider/cart/cartProvider.jsx"],"names":["React","createContext","useEffect","useState","addItemToCart","removeItemFromCart","filterItemFromCart","getCartItemsCount","getCartItemTotal","CartContext","hidden","toggleHidden","cartItems","removeItems","addItem","clearItemFromCart","cartItemsCount","cartTotal","CartProvider","children","setHidden","setCartItems","setCartTotal","setCartItemsCount","item","removeItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,SACEC,aADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,iBAJF,EAKEC,gBALF,QAMO,cANP;AAQA,OAAO,MAAMC,WAAW,GAAGR,aAAa,CAAC;AACvCS,EAAAA,MAAM,EAAE,IAD+B;AAEvCC,EAAAA,YAAY,EAAE,MAAM,CAAE,CAFiB;AAGvCC,EAAAA,SAAS,EAAE,EAH4B;AAIvCC,EAAAA,WAAW,EAAE,MAAM,CAAE,CAJkB;AAKvCC,EAAAA,OAAO,EAAE,MAAM,CAAE,CALsB;AAMvCC,EAAAA,iBAAiB,EAAE,MAAM,CAAE,CANY;AAOvCC,EAAAA,cAAc,EAAE,CAPuB;AAQvCC,EAAAA,SAAS,EAAE;AAR4B,CAAD,CAAjC;;AAWP,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAM,CAACT,MAAD,EAASU,SAAT,IAAsBjB,QAAQ,CAAC,IAAD,CAApC;;AACA,QAAMQ,YAAY,GAAG,MAAMS,SAAS,CAAC,CAACV,MAAF,CAApC;;AACA,QAAM,CAACE,SAAD,EAAYS,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,SAAD,EAAYK,YAAZ,IAA4BnB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACa,cAAD,EAAiBO,iBAAjB,IAAsCpB,QAAQ,CAAC,CAAD,CAApD;;AAEA,QAAMW,OAAO,GAAIU,IAAD,IAAUH,YAAY,CAACjB,aAAa,CAACQ,SAAD,EAAYY,IAAZ,CAAd,CAAtC;;AACA,QAAMC,UAAU,GAAID,IAAD,IACjBH,YAAY,CAAChB,kBAAkB,CAACO,SAAD,EAAYY,IAAZ,CAAnB,CADd;;AAGA,QAAMT,iBAAiB,GAAIS,IAAD,IACxBH,YAAY,CAACf,kBAAkB,CAACM,SAAD,EAAYY,IAAZ,CAAnB,CADd;;AAGAtB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,iBAAiB,CAAChB,iBAAiB,CAACK,SAAD,CAAlB,CAAjB;AACAU,IAAAA,YAAY,CAACd,gBAAgB,CAACI,SAAD,CAAjB,CAAZ;AACD,GAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;AAKA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,MADK;AAELC,MAAAA,YAFK;AAGLG,MAAAA,OAHK;AAILE,MAAAA,cAJK;AAKLJ,MAAAA,SALK;AAMLa,MAAAA,UANK;AAOLV,MAAAA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGI,QAXH,CADF;AAeD,CAlCD;;AAoCA,eAAeD,YAAf","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  addItemToCart,\r\n  removeItemFromCart,\r\n  filterItemFromCart,\r\n  getCartItemsCount,\r\n  getCartItemTotal,\r\n} from \"./cart.utils\";\r\n\r\nexport const CartContext = createContext({\r\n  hidden: true,\r\n  toggleHidden: () => {},\r\n  cartItems: [],\r\n  removeItems: () => {},\r\n  addItem: () => {},\r\n  clearItemFromCart: () => {},\r\n  cartItemsCount: 0,\r\n  cartTotal: 0,\r\n});\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [hidden, setHidden] = useState(true);\r\n  const toggleHidden = () => setHidden(!hidden);\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [cartItemsCount, setCartItemsCount] = useState(0);\r\n\r\n  const addItem = (item) => setCartItems(addItemToCart(cartItems, item));\r\n  const removeItem = (item) =>\r\n    setCartItems(removeItemFromCart(cartItems, item));\r\n\r\n  const clearItemFromCart = (item) =>\r\n    setCartItems(filterItemFromCart(cartItems, item));\r\n\r\n  useEffect(() => {\r\n    setCartItemsCount(getCartItemsCount(cartItems));\r\n    setCartTotal(getCartItemTotal(cartItems));\r\n  }, [cartItems]);\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        hidden,\r\n        toggleHidden,\r\n        addItem,\r\n        cartItemsCount,\r\n        cartItems,\r\n        removeItem,\r\n        clearItemFromCart,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}